# ARTS
算法学习
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true
示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
进阶:

你能不将整数转为字符串来解决这个问题吗？

解答：
class Solution {
public:
    bool isPalindrome(int x);
};

 bool Solution::isPalindrome(int x) {
     int a=0,b=0;
     long int sum=0;
     if(x<0){
        return false;
     }
     else if(x>=0&&x<10){
         return true;
     }
     else if(x>=10){
         b=x;
         while(x!=0){
             a=x%10;
             x=x/10;
             sum=a*10+sum*10;
         }
        sum=sum/10;
     }
        if(sum==b){
             return true;
         }
         else{
             return false;
         }
    }
    
 思路：
    1.负数一定不为回文数；1-9定位回文数
    2.直接将整个整数倒过来与之前的整数进行比较得出结果。
